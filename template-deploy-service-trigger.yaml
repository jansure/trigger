apiVersion: devops.alauda.io/v1alpha1
kind: ClusterPipelineTemplate
metadata:
  name: alaudaDeployServiceTrigger
  annotations:
    displayName.zh-CN: "触发器更新应用"
    displayName.en: "Trigger Update Application"
    description.zh-CN: "触发器更新应用"
    description.en: "Trigger Update Application"
    version: "4.11.30"
    style.icon: kubernetes
  labels:
    category: DeployService
spec:
  engine: graph
  withSCM: false
  agent:
    label: tools
    labelMatcher: tools
  options:
    timeout: 10
    raw: "buildDiscarder(logRotator(numToKeepStr: '200'))"
  stages:
    - name: "DeployService"
      tasks:
        - name: deployService
          kind: ClusterPipelineTaskTemplate
          type: public/deployService
  post:
    always:
      - name: notification
        kind: ClusterPipelineTaskTemplate
        relation:
          - action: show
            when:
              name: UseNotification
              value: true
  parameters:
    - name: imageTag
      type: StringParameterDefinition
      value: "latest"
      description: Image Tag
  arguments:
    - displayName:
        zh-CN: "更新应用"
        en: "Update Application"
      items:
        - name: clusterName
          schema:
            type: string
          binding:
            - deployServiceTrigger.args.clusterName
          display:
            type: alauda.io/clustername
            name:
              zh-CN: "集群"
              en: "cluster"
            description:
              zh-CN: "需要更新的应用所在的集群"
              en: "cluster"
          required: true
          value: ""
        - name: namespace
          schema:
            type: string
          binding:
            - deployServiceTrigger.args.namespace
          display:
            type: alauda.io/namespace
            name:
              zh-CN: "命名空间"
              en: "namespace"
            description:
              zh-CN: "需要更新的应用所在的命名空间"
              en: "namespace"
            related: clusterName
          required: true
          value: ""
        - name: serviceName
          schema:
            type: string
          binding:
            - deployServiceTrigger.args.serviceName
          display:
            type: alauda.io/servicenamemix
            name:
              zh-CN: "应用"
              en: "application"
            description:
              zh-CN: "需要更新的应用名称、组件类型、组件名称"
              en: "application"
            related: namespace
          required: true
          value: ""
        - name: containerName
          schema:
            type: string
          binding:
            - deployServiceTrigger.args.containerName
          display:
            type: alauda.io/containername
            name:
              zh-CN: "容器"
              en: "container"
            description:
              zh-CN: "需要更新的容器实例名称"
              en: "The name of the container instance that needs to be updated"
            related: serviceName
          required: true
          value: ""
        - name: imageRepositoryMode
          schema:
            type: string
            enum:
              - "choice"
              - "input"
          binding:
            - deployServiceTrigger.args.imageRepositoryMode
          display:
            type: radio
            advanced: false
            name:
              zh-CN: "方式"
              en: "Source Image Mode"
            enumAlias:
              - "选择"
              - "输入"
            description:
              zh-CN: "镜像仓库地址输入方式。例：选择"
              en: "Source Image Repository Mode."
          required: true
          default: "choice"
          value: "choice"
        - name: "imageRepositoryDeployChoice"
          schema:
            type: imageRepositoryList
          binding:
            - deployServiceTrigger.args.imageRepositoryDeployChoice
          required: true
          value: ""
          display:
            type: imageRepositoryList
            name:
              zh-CN: "镜像仓库"
              en: Repository
            description:
              zh-CN: "镜像仓库tag值为${imageTag}时，手动触动，将按照执行时弹框输入的tag进行更新，自动触发，将按照tag为latest进行更新；tag值不为${imageTag}时，流水线执行时，手动触发和自动触发都按照该tag进行更新"
              en: "When the tag value of the image repository is ${imageTag}, it will be manually triggered, and it will be updated according to the tag entered in the pop-up box during execution. It will be automatically triggered, and the latest will be updated according to tag. When the tag value is not ${imageTag}, both manual trigger and automatic trigger will be updated according to the tag when the pipeline executes."
          relation:
            - action: show
              when:
                name: imageRepositoryMode
                value: "choice"
        - name: "imageRepositoryDeployInput"
          schema:
            type: string
          binding:
            - deployServiceTrigger.args.imageRepositoryDeployInput
          required: true
          value: ""
          display:
            type: string
            name:
              zh-CN: "镜像仓库"
              en: Repository
            description:
              zh-CN: "镜像仓库tag值为${imageTag}时，手动触动，将按照执行时弹框输入的tag进行更新，自动触发，将按照tag为latest进行更新；tag值不为${imageTag}时，流水线执行时，手动触发和自动触发都按照该tag进行更新"
              en: "When the tag value of the image repository is ${imageTag}, it will be manually triggered, and it will be updated according to the tag entered in the pop-up box during execution. It will be automatically triggered, and the latest will be updated according to tag. When the tag value is not ${imageTag}, both manual trigger and automatic trigger will be updated according to the tag when the pipeline executes."
          relation:
            - action: show
              when:
                name: imageRepositoryMode
                value: "input"
        - name: deployTag
          schema:
            type: string
            enum:
              - "alterationTag"
              - "assignTag"
          binding:
            - deployServiceTrigger.args.deployTag
          display:
            type: radio
            advanced: false
            name:
              zh-CN: "更新标签"
              en: "Sync Source Image Tag"
            enumAlias:
              - "更新变动标签"
              - "更新指定标签"
            description:
              zh-CN: "应用更新标签。例：更新变动标签"
              en: "Switch update service tag,for example \"update alteration tag\"."
          required: true
          default: "alterationTag"
          value: "alterationTag"
        - name: "sourceImageTag"
          schema:
            type: string
          binding:
            - deployServiceTrigger.args.sourceImageTag
          display:
            type: string
            advanced: false
            name:
              zh-CN: "更新标签"
              en: "Update image tag"
            description:
              zh-CN: "更新应用的版本。例：latest"
              en: "When synchronizing the apps, enter the version of the apps, for example, latest."
          required: false
          default: ${imageTag}
          value: ""
          relation:
            - action: show
              when:
                name: deployTag
                value: "assignTag"
        - name: "sourceCredentialId"
          schema:
            type: string
          binding:
            - deployServiceTrigger.args.sourceCredentialId
          display:
            type: alauda.io/jenkinscredentials
            args:
              type: kubernetes.io/dockerconfigjson
            name:
              zh-CN: "凭据"
              en: "Credentials"
            description:
              zh-CN: "更新应用时需要拉取镜像所使用的凭据"
              en: "Source Image Repository Credentials"
          required: false
          value: ""
          relation:
            - action: show
              when:
                name: imageRepositoryMode
                value: "input"
        - name: "rollback"
          schema:
            type: boolean
          required: false
          binding:
            - deployServiceTrigger.args.rollback
          display:
            type: boolean
            name:
              zh-CN: "失败后回滚"
              en: "rollbackOnFailure"
            description:
              zh-CN: "更新应用后，如应用不能正常运行，则回滚到更新前的版本"
              en: "After updating application, such as application cannot run normally, roll back to the previous of the updated version"
        - name: "command"
          schema:
            type: string
          required: false
          binding:
            - deployServiceTrigger.args.command
          value: ""
          display:
            type: string
            advanced: false
            name:
              zh-CN: "启动命令"
              en: "command"
            description:
              zh-CN: "即 command，相当于 Dockerfile 中的 ENTRYPOINT 命令。如果没有指定启动命令，将使用容器镜像中的 ENTRYPOINT"
              en: "command"
        - name: "args"
          schema:
            type: string
          required: false
          binding:
            - deployServiceTrigger.args.args
          display:
            type: string
            advanced: false
            name:
              zh-CN: "参数"
              en: "args"
            description:
              zh-CN: "即 args，相当于 Dockerfile 中的 CMD，负责提供启动命令的命令参数。如果没有指定参数，将使用容器镜像中的 CMD"
              en: "args"
        - name: timeout
          schema:
            type: string
          binding:
            - deployServiceTrigger.args.timeout
          display:
            type: string
            advanced: false
            name:
              zh-CN: "超时时间（秒）"
              en: "Timeout (s)"
            description:
              zh-CN: "当前任务的执行时间若超过超时时间，则会中止任务，流水线变为失败状态"
              en: ""
          required: true
          default: '300'
          value: ""
    - displayName:
        zh-CN: "通知"
        en: "Notification"
      items:
        - name: "UseNotification"
          schema:
            type: boolean
          display:
            type: boolean
            name:
              zh-CN: "开启通知"
              en: "Use Notification"
            description:
              zh-CN: "开启后，可选择已创建好的通知，当流水线执行完成后，会根据通知设置发送通知。"
              en: "After opening, you can choose the created notification. When the pipeline is completed, the notification will be sent according to the notification settings."
          required: false
          value: "false"
        - name: "PlatformNotification"
          schema:
            type: alauda.io/notificationmix
          required: true
          binding:
            - notification.args.PlatformNotification
          value: ""
          display:
            type: alauda.io/notificationmix
            name:
              zh-CN: "通知"
              en: Notification
            description:
              zh-CN: "选择已创建好的通知（由管理员创建），将根据选择对流水线进行通知。"
              en: "Select the created notification (created by the administrator), and the pipeline will be notified according to the selection."
          relation:
            - action: show
              when:
                name: UseNotification
                value: true
  supportedTriggers:
    - type: imageTrigger
      enable: true
      sourceImageRepository:
        - imageRepositoryDeployInput
        - imageRepositoryDeployChoice
      sourceImageTag: imageTag
    - type: cron
